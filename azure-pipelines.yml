trigger:
- Azure

variables:
  projectName: 'Winnocare'

stages:
  - stage: Build
    displayName: Build Ionic - Android projects
    jobs:
      # Debug build
      - job: Build_Ionic_Android_Debug
        variables:
          - name: buildConfiguration
            value: debug
        displayName: Build Debug
        pool:
            name: default
            demands:
            - agent.name -equals Ridhams-MacBook-Air
        steps:   
          - script: npm install -g @ionic/cli
            displayName: 'Install Ionic CLI'

          - task: Npm@1
            inputs:
              workingDir: '$(Build.SourcesDirectory)/$(projectName)'
              command: install
            displayName: 'NPM Install'
          
          - powershell: |
              ionic cap build android --no-open
              npx cap copy android
              npx cap update android
              npx cap sync android
              cd android
              ./gradlew assemble$(buildConfiguration)
            workingDirectory: $(Build.SourcesDirectory)/$(projectName)
            displayName: 'Build Android Project'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                pwd
                ls -la $(Build.SourcesDirectory)
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)/android/
                echo "***********************************************************"
          - task: Gradle@2
            displayName: 'Building Android App'
            inputs:
              workingDirectory: $(Build.SourcesDirectory)/$(projectName)/android
              gradleWrapperFile: $(Build.SourcesDirectory)/$(projectName)/android/gradlew
              gradleOptions: '-Xmx1536m'
              publishJUnitResults: false
              testResultsFiles: '**/TEST-*.xml'
              tasks: assemble$(buildConfiguration)
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: 'default'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                pwd
                ls -la $(Build.SourcesDirectory)
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)/android/
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)/android/app/build/outputs/apk/$(buildConfiguration)

          - task: CopyFiles@2
            displayName: 'Copy Files to: Drop'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/$(projectName)/android/app/build/outputs/apk/$(buildConfiguration)'
              Contents: "app-$(buildConfiguration).apk"
              TargetFolder: '$(build.artifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: Drop'
          
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Authenticate gdrive CLI tool
                gdrive about --service-account celestial-sum-382323-4f385ac248d7.json 
                
                # Upload APK file to Google Drive
                gdrive upload --parent "11QJuVwwSPf3XfU_Yibj7CBglgxXC6u8" "$(Build.ArtifactStagingDirectory)/app-debug.apk"
            displayName: 'Upload APK to Google Drive'

